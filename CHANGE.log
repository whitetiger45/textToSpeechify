textToSpeechify Change Tracker:
-------------------------
Release: 3.0
Date: 2022.06.15

Changes:
    2022.06.15:
        - improve api reusability by decoupling call to dispatchTextToSpeechify in downloadUrl in ttshelpers
        - add optional parameter outputFile (w/ default) to downloadUrl(url,outputFile=blob)
        - add optional parameters (w/ defaults) outputFile and inputFile to dispatchTextToSpeechify(inputFile=blob,outputFile="output.txt")
        - make blob a global variable
        - remove duplicate function definitions from textToSpeechify
        - remove use of urllib from todaysHackerNews in examples

-------------------------
Release: 2.1
Date: 2022.06.09

Changes:
    2022.06.09:
        - refactored parsePDFToHTMLFile function and tested against a single pdf
        - added additional regression-test os's to textToSpeechify.yml for multi-platform testing
        - update .gitignore

-------------------------
Release: 2.0
Date: 2022.06.08

Changes:
    2022.06.08:
        - moved all duplicated functions and variables to newly created ttshelper.py file to modularize code
    2022.06.07:
        - added index.html, workflow
        
-------------------------
Release: 1.1.6.1
Date: 2022.06.06

Changes:
    2022.06.06:
        - updated downloadUrl and main in todaysHackerNews.py
        - added grepStories and sites dictionary in todaysHackerNews.py
    2022.06.03:
        - add stripReference function and wikipedia articles to urlFeed.TESTS.txt
    2022.06.02:
        - append urlFeed.TESTS.txt

-------------------------
Release: 1.1.6
Date: 2022.06.01

Changes:
    2022.05.31:
        - add additional url(s) to urlFeed.TESTS.txt
        - fix format string bug in textToSpeechifyDispatcher

-------------------------
Release: 1.1.5
Date: 2022.05.30

Changes:
    2022.05.28:
        - add additional url(s) to urlFeed.TESTS.txt
        - refactor downloadUrls to use curl instead of wget
        - add testResults.txt
        - change first conditional in saveParsedFile to 'state[idx][-1] == " "' from 'state[idx+1][0].islower()'

-------------------------
Release: 1.1.4
Date: 2022.05.27

Changes:
    2022.05.27:
        - add argparse object and usage
        - add requirements file

-------------------------
Release: 1.1.3
Date: 2022.05.27

Changes:
    2022.05.27:
        - created textToSpeechify.TESTS.py for regression testing when changes are added with baseline file containing urls used to build previous releases. (urlFeed.TESTS.txt)
        - fixed logic bug in textToSpeechifyDispatcher.py by adding else after except
        - refactored downloadUrl and dispatchTextToSpeechify to use check_call and check_output
        - added filtering of files with ".pdf" to textToSpeechifyDispatcher
    2022.05.26:
        - changed writing to latestNews.txt in todaysHackerNews.py to appending to persist file
        - moved sanity check on length of cmdline args to front of conditional statement in main
        - refactored parsePDFToHTMLFile and parseHTMLFile to use re.search to include tags that have attributes (body[\s]* and p[\s]*)
    2022.05.25:
        - updated usage string to include version
        - added '/*' to stripTagL and stripPDFToHTMLTagL regex to fix bug

-------------------------
Release: 1.1.2
Date: 2022.05.25

Changes:
    2022.05.25:
        - added stripPDFToHTMLTagL and parsePDFToHTMLFile
        - added --htmlfrompdf cmdline flag
        - added two files that were converted to html files from their original pdf version. this is to document how this program can be used to create speech-to-text-ready text from pdf files.

Additional notes:
    parsePDFToHTMLFile has only been tested on html files generated using the unix utility pdftohtml as of this release.

-------------------------
Release: 1.1
Date: 2022.05.25

Changes:
    2022.05.24:
        - changed 'w' flag to 'a' when writing output so files can be concatenated
        - added findTagsInline lambda using re.finditer
    2022.05.25:
        - added parseHTMLFile, stripTagL, saveParsedFile functions
        - added STATUS variable, and values USAGE, SUCCESS, NOT_SERIOUS, FATAL.
        - commented out unused functions to test changes; tested on file 'enhanced-fileless-attack-detection-with-crowdstrike-falcon.html' that could not be parsed using v1.0.

